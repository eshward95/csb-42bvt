{"version":3,"sources":["ThemeContext.jsx","components/Editor.jsx","App.js","index.js"],"names":["themeColours","light","color","backgroundColor","dark","ThemeContext","React","createContext","ThemeProvider","children","useState","themeName","setThemeName","Provider","value","theme","setTheme","name","document","body","style","setProperty","Editor","props","useContext","text","setText","class","className","htmlFor","title","onClick","type","id","onChange","console","log","data","element","createElement","file","Blob","href","URL","createObjectURL","download","appendChild","click","placeholder","mode","newValue","fontSize","showPrintMargin","showGutter","highlightActiveLine","enableLiveAutocompletion","setOptions","enableBasicAutocompletion","showLineNumbers","tabSize","App","htmlVal","setHtml","sandbox","srcDoc","frameBorder","width","height","rootElement","getElementById","ReactDOM","render"],"mappings":"uMAEMA,EAAe,CACnBC,MAAO,CACLC,MAAO,UACPC,gBAAiB,WAEnBC,KAAM,CACJF,MAAO,OACPC,gBAAiB,YAIfE,EAAeC,IAAMC,cAAc,SAE5BC,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9B,EAAkCH,IAAMI,SAAS,SAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KAUA,OACE,cAACP,EAAaQ,SAAd,CAAuBC,MAAO,CAAEC,MAAOJ,EAAWK,SATnC,SAACC,GAChBC,SAASC,KAAKC,MAAMC,YAAY,UAAWrB,EAAaiB,GAAMf,OAC9DgB,SAASC,KAAKC,MAAMC,YAClB,qBACArB,EAAaiB,GAAMd,iBAErBS,EAAaK,KAGb,SACGR,K,8BCfQ,SAASa,EAAOC,GAC7B,MDmB4BjB,IAAMkB,WAAWnB,GCnBrCU,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,EAAwBV,WAAe,IAAvC,mBAAOmB,EAAP,KAAaC,EAAb,KAuBA,OACE,sBAAKC,MAAM,gBAAX,UACE,sBAAKC,UAAU,mBAAf,UACE,qBAAKA,UAAU,YAAf,SACE,wBACEA,UAAU,SACVC,QAAQ,WACRC,MAAM,mCAHR,UAKE,uBACEC,QAAS,kBAAMf,EAAmB,SAAVD,EAAmB,QAAU,SACrDiB,KAAK,WACLC,GAAG,aAEL,qBAAKL,UAAU,iBACf,qBAAKA,UAAU,cAAf,0BACA,qBAAKA,UAAU,aAAf,+BAGJ,8BACE,wBAAQG,QArCC,WACfR,EAAMW,SAAST,IAoCkBQ,GAAG,MAA9B,wBAIF,8BACE,wBAAQF,QAtCQ,WACtBI,QAAQC,IAAI,mBAAoBX,GAChC,IAAIY,EAAOZ,EACLa,EAAUpB,SAASqB,cAAc,KACjCC,EAAO,IAAIC,KAAK,CAACJ,GAAO,CAC5BL,KAAM,6BAERM,EAAQI,KAAOC,IAAIC,gBAAgBJ,GACnCF,EAAQO,SAAW,eACnB3B,SAASC,KAAK2B,YAAYR,GAC1BA,EAAQS,SA4BgCd,GAAG,WAArC,gCAKJ,cAAC,IAAD,CACEe,YAAY,uBACZC,KAAK,OACLlC,MAAiB,SAAVA,EAAmB,UAAY,SACtCE,KAAK,SACLiB,SAxDW,SAACgB,GAChBxB,EAAQwB,IAwDJC,SAAU,GACVC,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBC,0BAA0B,EAC1BC,WAAY,CACVC,2BAA2B,EAC3BC,iBAAiB,EACjBC,QAAS,QC7EJ,SAASC,IACtB,MAA2BlD,mBAAS,IAApC,mBAAOmD,EAAP,KAAgBC,EAAhB,KACA,OACE,cAAC,EAAD,UACE,sBAAKlC,UAAU,mBAAf,UACE,sBAAMA,UAAU,QAAhB,6BACA,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAACN,EAAD,CAAQR,MAAO+C,EAAS3B,SAAU4B,MAEpC,qBAAKlC,UAAU,cAAf,SACE,wBACEK,GAAG,UACHH,MAAM,SACNiC,QAAQ,gBACRC,OAAQH,EACRI,YAAY,IACZC,MAAM,OACNC,OAAO,mBClBrB,IAAMC,EAAclD,SAASmD,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACX,EAAD,MAEFQ,K","file":"static/js/main.b6b6e800.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst themeColours = {\r\n  light: {\r\n    color: \"#343434\",\r\n    backgroundColor: \"#fefefe\"\r\n  },\r\n  dark: {\r\n    color: \"#fff\",\r\n    backgroundColor: \"#3f3f3f\"\r\n  }\r\n};\r\n\r\nconst ThemeContext = React.createContext(\"light\");\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [themeName, setThemeName] = React.useState(\"light\");\r\n\r\n  const setTheme = (name) => {\r\n    document.body.style.setProperty(\"--color\", themeColours[name].color);\r\n    document.body.style.setProperty(\r\n      \"--background-color\",\r\n      themeColours[name].backgroundColor\r\n    );\r\n    setThemeName(name);\r\n  };\r\n  return (\r\n    <ThemeContext.Provider value={{ theme: themeName, setTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => React.useContext(ThemeContext);\r\n","import * as React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport { useTheme } from \"../ThemeContext\";\r\n\r\n// import \"brace/mode/javascript\";\r\n// import \"brace/mode/plain_text\";\r\nimport \"brace/mode/html\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-html\";\r\nimport \"ace-builds/src-noconflict/theme-github\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\n\r\nexport default function Editor(props) {\r\n  const { theme, setTheme } = useTheme();\r\n  const [text, setText] = React.useState(\"\");\r\n\r\n  const onChange = (newValue) => {\r\n    setText(newValue);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    props.onChange(text);\r\n  };\r\n\r\n  const downloadContent = () => {\r\n    console.log(\"download clicked\", text);\r\n    let data = text;\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([data], {\r\n      type: \"text/plain;charset=utf-8\"\r\n    });\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"download.txt\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  };\r\n\r\n  return (\r\n    <div class=\"editor-holder\">\r\n      <div className=\"editorController\">\r\n        <div className=\"container\">\r\n          <label\r\n            className=\"switch\"\r\n            htmlFor=\"checkbox\"\r\n            title=\"Change color scheme to dark mode\"\r\n          >\r\n            <input\r\n              onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\r\n              type=\"checkbox\"\r\n              id=\"checkbox\"\r\n            />\r\n            <div className=\"slider round\"></div>\r\n            <div className=\"toggle-moon\">üåô</div>\r\n            <div className=\"toggle-sun\">‚òÄÔ∏è</div>\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <button onClick={onSubmit} id=\"run\">\r\n            Run code\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <button onClick={downloadContent} id=\"download\">\r\n            Download code\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <AceEditor\r\n        placeholder=\"Write your code here\"\r\n        mode=\"html\"\r\n        theme={theme === \"dark\" ? \"monokai\" : \"github\"}\r\n        name=\"Editor\"\r\n        onChange={onChange}\r\n        fontSize={18}\r\n        showPrintMargin={true}\r\n        showGutter={true}\r\n        highlightActiveLine={true}\r\n        enableLiveAutocompletion={true}\r\n        setOptions={{\r\n          enableBasicAutocompletion: true,\r\n          showLineNumbers: true,\r\n          tabSize: 2\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import \"./styles.css\";\nimport React, { useState } from \"react\";\nimport Editor from \"./components/Editor\";\nimport { ThemeProvider } from \"./ThemeContext\";\n\nexport default function App() {\n  const [htmlVal, setHtml] = useState(\"\");\n  return (\n    <ThemeProvider>\n      <div className=\"editor-container\">\n        <span className=\"title\">Frontend editor</span>\n        <div className=\"App\">\n          <div className=\"pane editor\">\n            <Editor value={htmlVal} onChange={setHtml} />\n          </div>\n          <div className=\"pane Output\">\n            <iframe\n              id=\"myFrame\"\n              title=\"output\"\n              sandbox=\"allow-scripts\"\n              srcDoc={htmlVal}\n              frameBorder=\"0\"\n              width=\"100%\"\n              height=\"100%\"\n            />\n          </div>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}